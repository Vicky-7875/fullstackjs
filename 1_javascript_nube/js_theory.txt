js code gyan
Brendan eich------------------------>Mocha--->Livescript----->javascript


mircosoft-----ECMA script(mangaed by TC39)


JQUERY---js library

ryan dahl
c++ + V8 engine  ---2009--nodeJS

2015-------ES6


--------------------
with help of js

frontend(react ,angular,view)
backend(node,express)
Mobile app dev(react native(insta,discord,myntra,pintrest))
Desktop app(electron JS(discord,vs code,skype))
game development(broswer base)
PWA app
Machine learning(tensor flow,automation,IOT project)
broswer extenstion()
-------------------------------------------------------------

Object:---real life objects js(just like laptop,mobile)

laptop
	model= xxx
	color=white
----------------------------------------------------------------

var let const

var ==>   function scope/global scope

var abc='sssss';

let===>   block scope

function hello(){
let age=25
}

//variables used sequence
// var,let,const
//start with 
// 1) Const      //hoisting is not possible
// 2)let     //hoisting is not possible
// 3)Var  never use 

=====================================================================

data types(dyanamic loosly type)

// I.primitive data types(single value store
1.Number
 let age =25//-25//20.25;

2.string (textual data)
let name='vivek';

3.boolean (true / false)
4.undefined
let age 
console.log(age)

5.BigInt  // Number.MAX_SAFE_INTEGER
		  //2**53-1
		  //9007199254740991

6.Symbol///(Unique)

///II.structual type
1.Object(key value pair)
	1.1 Function( is also object)
	//Non-data structure
	//callable
	1.2 Arrays(is also Object)//store any type of data;
	//collection of values
	const number=[2,3,4,5,'javascript',{name:'vivek'},]
	1.3 Maps(key)
	1.4 Set (remove duplicate values)
	1.5 Date(is also object)

//III. structual root
	1.null

==========================================================================

Operators(10)
1.Assignment Operators (=)
let x=10;
let y;
y=x;
console.log(y)
// let x = 10;
// let y = 20;
// x += y;//compound operator;  x = x+y
// x -= y;//compound operator;  x = x-y
// x *= y;//compound operator;  x = x*y
// x /= y;//compound operator;  x = x/y

2.Comparison Operators
**************** (coercion) for convert data type 4 =='4'
Equal(==)
not equal(!=)
strict equal(===)
strict not equal(!==)
greater than(>)
greater than or equal(>=)
less than(<)
less than or equal(<=)

3.Arithmetic Operators
(+,-,*,/,**)

 let x = 10;
 let y = 20;
 x =x + 1;  //x +=1;  //x++;(increment) //x--(decrement) // x**(exponetian)

4.Bitwise Operators

5.Logical Operators
  5.1 Logical AND &&
	let happy = true && true;
	console.log(happy)
  5.2 Logical OR ||
	let happy = true || false;
	console.log(happy)
  5.3 Logical NOT !
	let happy = !true;
	console.log(happy)


6.String Operators

7.Conditional (ternary) Operators
const userRole ='admin';

if(userRole ==='admin')
	console.log('you are an admin')
else
	console.log('you are not an admin')
//ternary
userRole ==='admin' ? console.log('you are an admin'):console.log('you are not an admin')

8.Comma Operators
9.Unary Operators
10.Relational Operators
11. Nullish coalescing operator


----------------------------------------------------------------------------

/**Arrays/
const  langs = ['js','paython','c'];
methods:-

filter
Map
Reduce
Indexof
Find
Sort -------------------sort change original arrays make it new
splice -------------------splice change original arrays make it new


langs.push('last add');
langs.pop(); //last remove
langs.unshift('first add')// first add
langs.shift()// first remove

-------------------------------------------------------------------------------------
/**Functions */
we can reuse

function funName(){
	
}



//good practice

//1.naming
// show,get,calc ///verb start
// 2.One funtion -one action  like format text
// 3.function name should be descriptive  not like a(),b()